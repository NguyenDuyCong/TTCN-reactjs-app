{"version":3,"sources":["Components/ImportFileComponent.js","Components/TableComponent.js","Components/ReadPartitionFileComponent.js","Components/TablePartitionComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ImportFileComponent","props","fileReader","handleFileRead","e","i","content_copy","result","split","data","console","log","length","push","replace","getData","className","type","id","onChange","file","target","files","FileReader","onloadend","readAsText","TableComponent","colA","colT","colG","colC","colGap","rows","columns","map","value","index","onClick","handleSelectColumn","toString","v","key","handleSelectRow","cellValue","cellIndex","matrix","isEqual","countColValue","parts","name","begin","end","ReadPartitionFileComponent","content","match","forEach","parseInt","setParts","TablePartitionComponent","column","App","useState","setData","handleExportNexFile","p","download","document","createElement","blob","Blob","url","URL","createObjectURL","href","setAttribute","click","handleExportPhyFile","d","listSpace","Array","fill","splice","join","addWhiteSpace","row","parentElement","classList","contains","remove","add","handleDeleteRow","tempData","slice","querySelectorAll","indexNeedRemove","rowIndex","colIndex","r","columm","cells","handleInvertColumnSelection","colSelected","colUnSelected","col","handleDeleteColumn","c","tempParts","count","k","handleInvertSelection","rowsSelected","rowsUnSelected","handleEditNamePart","querySelector","start","alert","indexOf","partsData","newPartsData","isNextPart","isChanged","p_name","p_begin","p_end","part_list_element","htmlFor","style","width","showPartitionData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a73ac9ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImportFileComponent = (props) => {\r\n\r\n    let fileReader;\r\n    const handleFileRead = (e) => {\r\n        const content = fileReader.result;\r\n        let content_copy = content.split(/[ \\n]+/)\r\n        var data = [];\r\n        console.log(\"data in import\",data);\r\n        // console.log(content_copy[3]);\r\n        // console.log(content_copy);\r\n\r\n        var i;\r\n        for (i = 2; i < content_copy.length; i += 2) {\r\n            if (content_copy[i] === \"\" || content_copy[i+1] === \"\") {\r\n                continue;\r\n            }\r\n            data.push({\r\n                \"key\": content_copy[i],\r\n                \"value\": content_copy[i+1].replace(\"\\r\", \"\").split(\"\")\r\n            });\r\n        }\r\n\r\n        console.log(data);\r\n        props.getData(data);\r\n    };\r\n\r\n    const handleFileChosen = (file) => {\r\n        // console.log(file);\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    return (\r\n        <div className = 'upload-expense'>\r\n            <label className=\"custom-input-file\">\r\n                Import file \r\n                <input \r\n                    type=\"file\"\r\n                    id='file'\r\n                    className='input-file'\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                    // onChange={e => handleFile(e)}\r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportFileComponent;","import React from 'react';\r\nimport \"./TableComponent.css\";\r\n\r\nconst TableComponent = (props) => {\r\n    var data = props.data;\r\n    var colA = 0;\r\n    var colT = 0;\r\n    var colG = 0;\r\n    var colC = 0;\r\n    var colGap = 0;\r\n    var rows = 0;\r\n    var columns = 0;\r\n\r\n    var matrix = [];\r\n\r\n    const countColValue = (matrix) => {\r\n        rows = matrix.length;\r\n        columns = matrix[0].length;\r\n        let index = 0;\r\n        while(index < matrix[0].length) {\r\n            var isEqual = true;\r\n            for(let i = 0; i < matrix.length - 1; i++) {\r\n                if (matrix[i][index] !== matrix[i+1][index]) {\r\n                    isEqual = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (isEqual === true) {\r\n                // eslint-disable-next-line default-case\r\n                switch(matrix[0][index]) {\r\n                    case \"A\":\r\n                        colA ++;\r\n                        break;\r\n                    case \"T\":\r\n                        colT++;\r\n                        break;\r\n                    case \"G\":\r\n                        colG++;\r\n                        break;\r\n                    case \"C\":\r\n                        colC++;\r\n                        break;\r\n                    case \"-\":\r\n                        colGap ++;\r\n                        break;\r\n                }\r\n            }\r\n            index ++;\r\n        }\r\n\r\n        // console.log(\"count column A: \", colA);\r\n        // console.log(\"count column T: \", colT);\r\n        // console.log(\"count column G: \", colG);\r\n        // console.log(\"count column C: \", colC);\r\n        // console.log(\"count column -: \", colGap);\r\n        // console.log(\"count rows: \", rows);\r\n        // console.log(\"count columns: \", columns);\r\n    }\r\n\r\n    const getMatrix = () => {\r\n        matrix = (data.map((value, index) => {\r\n           return value['value'] \r\n        }))\r\n\r\n        // console.log(matrix);\r\n        countColValue(matrix);\r\n    }\r\n\r\n    const showHeader = () => {\r\n        return (\r\n            <tr className=\"row\" key=\"header-table\">\r\n                <td></td>\r\n                <td></td>\r\n                {data[0]['value'].map((value, index) => {\r\n                    return (\r\n                        <td className=\"cell\" key={index.toString()}><div className=\"head\" onClick={props.handleSelectColumn}>{index + 1}</div></td>\r\n                    )\r\n                })}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showContent = () => {\r\n        return (\r\n            data.map((v, index) => {\r\n                let {key, value} = v;\r\n                return (\r\n                    <tr key={key} className=\"row\">\r\n                        <td onClick={e => props.handleSelectRow(e)}><div>{index + 1}</div></td>\r\n                        <td><div className=\"name\">{key}</div></td>\r\n                        {\r\n                            value.map((cellValue, cellIndex) => {\r\n                                return (\r\n                                    <td className=\"cell\" key={cellIndex.toString()}><div>{cellValue}</div></td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    {showHeader()}\r\n                </thead>\r\n                <tbody>\r\n                    {showContent()}\r\n                </tbody>\r\n            </table>\r\n            {\r\n                getMatrix()\r\n            }\r\n            <div>\r\n                <div>Number of rows: {rows}</div>\r\n                <div>Number of columns: {columns}</div>\r\n                <div>Number of A columns: {colA}</div>\r\n                <div>Number of T columns: {colT}</div>\r\n                <div>Number of G columns: {colG}</div>\r\n                <div>Number of C columns: {colC}</div>\r\n                <div>Number of - columns: {colGap}</div>\r\n                <div>Number of partition: {props.parts.length}</div>\r\n                {props.parts.map((v, i) => {\r\n                    let {name, begin, end} = v;\r\n                    return <div key={i}>Partition {name} from {begin} to {end}</div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableComponent;","import React from 'react';\r\n\r\nconst ReadPartitionFileComponent = (props) => {\r\n\r\n    let fileReader;\r\n    const handleFileRead = (e) => {\r\n        const content = fileReader.result;\r\n        // console.log(content);\r\n        let data = [];\r\n        let regex_part = /charset part[0-9]+ = [0-9]+-[0-9]+/g;\r\n        let parts = content.match(regex_part);\r\n        // console.log(parts);\r\n\r\n        parts.forEach(e => {\r\n            let name = e.match(/part[0-9]+/g)[0];\r\n            let range_num = e.match(/[0-9]+-[0-9]+/g)[0];\r\n            let [begin, end] = range_num.split(\"-\");\r\n            \r\n            // for (let i = parseInt(begin); i <= parseInt(end); i++) {\r\n            //     data.push({\r\n            //         \"name\": name,\r\n            //         \"column\": i\r\n            //     })\r\n            // }\r\n            data.push({\r\n                \"name\": name,\r\n                \"begin\": parseInt(begin),\r\n                \"end\": parseInt(end)\r\n            })\r\n        });\r\n        // console.log(data);\r\n        props.setParts(data);\r\n    };\r\n\r\n    const handleFileChosen = (file) => {\r\n        // console.log(file);\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    return (\r\n        <div className = 'upload-file-partition'>\r\n            Read Partition file\r\n            <input \r\n                type=\"file\"\r\n                id='file'\r\n                className='input-file'\r\n                // onChange={e => handleFileChosen(e.target.files[0])}\r\n                onChange={e => handleFileChosen(e.target.files[0])}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPartitionFileComponent;","import React from 'react';\r\n\r\nconst TablePartitionComponent = (props) => {\r\n    \r\n    const data = props.data;\r\n\r\n    const showContent = () => {\r\n        return (\r\n            data.map((v, i) => {\r\n                let {name, column} = v;\r\n                return (\r\n                    <tr className=\"row-parts\" key={i.toString()}>\r\n                        <td className=\"column-parts\">{column}</td>\r\n                        <td className=\"name-parts\">{name}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <table className=\"table-partition\">\r\n            <thead>\r\n                <tr className=\"row-parts\">\r\n                    <td>Column</td>\r\n                    <td>Partition</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { showContent() }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TablePartitionComponent;","import './App.css';\nimport {useState} from 'react';\nimport ImportFileComponent from './Components/ImportFileComponent';\nimport TableComponent from './Components/TableComponent';\nimport ReadPartitionFileComponent from './Components/ReadPartitionFileComponent';\nimport TablePartitionComponent from './Components/TablePartitionComponent';\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [parts, setParts] = useState([]);\n\n  const showData = () => {\n    if (data.length === 0) {\n      return (\n        <h1>Data is not available</h1>\n      )\n    } else {\n      return (\n        // <h1>Data is available</h1>\n        <div>\n          <ReadPartitionFileComponent setParts={setParts} />\n          <button onClick={handleExportPhyFile}>Export .phy File</button>\n          <button onClick={handleExportNexFile}>Export .nex File</button>\n          <button onClick={handleInvertSelection}>Invert Row Selection</button>\n          <button onClick={handleDeleteRow}>Delete Row</button>\n          <button onClick={handleInvertColumnSelection}>Invert Column Selection</button>\n          <button onClick={handleDeleteColumn}>Delete Column</button>\n          <TableComponent data={data} parts={parts} handleSelectRow={e => handleSelectRow(e)}  handleSelectColumn={handleSelectColumn} />\n        </div>\n      )\n    }\n  }\n\n  const handleExportNexFile = () => {\n    // console.log(parts);\n    let content = \"#nexus\\n\";\n    content += \"begin sets;\\n\";\n    if (parts.length !== 0) {\n      parts.forEach(p => {\n        content += \"\\tcharset \" + p[\"name\"] + \" = \" + p[\"begin\"].toString() + \"-\" + p[\"end\"].toString() + \";\\n\";\n      })\n      content += \"\\tcharpartition mine =\" + parts.map(v => \" \" + v[\"name\"] + \":\" + v[\"name\"]) + \";\\n\";\n    } else {\n      content += \"\\tcharset part1 = 1-\" + data[0]['value'].length.toString() + \";\\n\";\n      content += \"\\tcharpartition mine = part1:part1;\\n\";\n    }\n    content += \"end;\"\n    console.log(content);\n\n    // handle to download\n    var download = document.createElement('a');\n    var blob = new Blob([content], {type: \"text/plain;charset=utf-8;\"});\n    var url = URL.createObjectURL(blob);\n    download.href = url;\n    download.setAttribute('download', 'test.nex');\n    download.click();\n  }\n\n  const addWhiteSpace = (key) => {\n    let listSpace = Array(12).fill(\" \");\n    listSpace.splice(0, key.length);\n    return listSpace.join(\"\");\n  }\n\n  const handleExportPhyFile = () => {\n    // console.log(data);\n    let content = \"\";\n    content += data.length + \" \" + data[0]['value'].length + \"\\n\";\n    data.forEach(d => {\n      content += d[\"key\"] + addWhiteSpace(d[\"key\"]) + d['value'].join(\"\") + \"\\n\";\n    })\n    console.log(content);\n\n    // handle to download\n    var download = document.createElement('a');\n    var blob = new Blob([content], {type: \"text/plain;charset=utf-8;\"});\n    var url = URL.createObjectURL(blob);\n    download.href = url;\n    download.setAttribute('download', 'test.phy');\n    download.click();\n  }\n\n  const handleSelectRow = (e) => {\n    // console.log(e.target);\n    // console.log(\"data\", data);\n    const row = e.target.parentElement.parentElement;\n    if(row.classList.contains('row-selected')) {\n      row.classList.remove('row-selected');\n    } else {\n        row.classList.add('row-selected');\n    }\n  }\n\n  const handleDeleteRow = () => {\n    let tempData = data.slice();\n    // console.log(\"data\", data);\n    let row = document.querySelectorAll(\".row-selected\");\n    if (row.length !== 0) {\n      let indexNeedRemove = []\n      row.forEach((e) => {\n        indexNeedRemove.push(e.rowIndex - 1);\n      })\n  \n      for (let i = indexNeedRemove.length - 1; i >= 0; i--) {\n        tempData.splice(indexNeedRemove[i], 1);\n      }\n\n      // console.log(\"temp\", tempData);\n      setData(tempData);\n      // console.log(\"data\", data);\n    }\n    \n    // console.log(row);\n  }\n\n  const handleSelectColumn = (e) => {\n    // console.log(e.target.parentElement.cellIndex);\n    const colIndex = e.target.parentElement.cellIndex;\n    var row = document.querySelectorAll(\"tr.row\");\n    row.forEach((r) => {\n      let columm = r.cells[colIndex];\n      if (columm.classList.contains(\"col-selected\")) {\n        columm.classList.remove(\"col-selected\");\n      } else {\n        columm.classList.add(\"col-selected\");\n      }\n    });\n    // console.log(row);\n  }\n\n  const handleInvertColumnSelection = () => {\n    let colSelected = document.querySelectorAll(\"td.cell.col-selected\");\n    let colUnSelected = document.querySelectorAll(\"td.cell:not(.col-selected)\");\n    // console.log(colSelected);\n    colSelected.forEach(col => {\n      col.classList.remove('col-selected')\n    })\n\n    colUnSelected.forEach(col => {\n      col.classList.add(\"col-selected\")\n    })\n  }\n\n  const handleDeleteColumn = () => {\n    let tempData = data.slice();\n    let  col = document.querySelectorAll(\"thead tr td.col-selected\");\n    let indexNeedRemove = [];\n    \n    col.forEach(c => {\n      indexNeedRemove.push(c.cellIndex - 2)\n    })\n    // console.log(indexNeedRemove);\n    \n    for (let i = indexNeedRemove.length - 1; i >= 0; i--) {\n      tempData.forEach(v => {\n        v['value'].splice(indexNeedRemove[i], 1)\n      })\n    }\n\n    // edit parts if it is imported\n    let tempParts = parts.slice();\n    if(tempParts.length !== 0) {\n      let count = 0;\n      for (let i = 0; i < tempParts.length; i++) {\n        // eslint-disable-next-line\n        let {name, begin, end} = tempParts[i];\n        if (count > 0) {\n          tempParts[i]['begin'] = begin - count;\n          count = 0;\n        }\n        for (let k = 0; k <= indexNeedRemove.length; k++) {\n          if (indexNeedRemove[k] >= begin && indexNeedRemove[k] <= end) {\n            count ++;\n          } else {\n            continue;\n          }\n        }\n        if (count > 0) {\n          tempParts[i][\"end\"] = end - count;\n          indexNeedRemove.splice(0, count);\n        }\n      }\n    }\n    if (tempParts.length !== 0) {\n      setParts(tempParts);\n    }\n\n    setData(tempData);\n\n    let colSelected = document.querySelectorAll(\"td.col-selected\");\n    colSelected.forEach(c => {\n      c.classList.remove(\"col-selected\")\n    })\n  }\n\n  const handleInvertSelection = () => {\n    var rowsSelected = document.querySelectorAll('tr.row.row-selected');\n    var rowsUnSelected = document.querySelectorAll(\"tr.row:not(.row-selected)\");\n    // console.log(rowsSelected);\n    if (rowsSelected !== null) {\n      for (let i = 0; i < rowsSelected.length; i++) {\n        rowsSelected[i].classList.remove(\"row-selected\");\n      }\n      for (let i = 0; i < rowsUnSelected.length; i++) {\n        rowsUnSelected[i].classList.add(\"row-selected\");\n      }\n    } else {\n      console.log(\"ko co du lieu\");\n    }\n\n  }\n\n  const showPartitionData = () => {\n    if (parts.length === 0) {\n      return (\n        <h1>Partitions is not available</h1>\n      )\n    } else {\n      // console.log(parts);\n      let part_list_element = [];\n      parts.forEach(e => {\n        let {name, begin, end} = e;\n        for (let i = begin; i <= end; i++) {\n          part_list_element.push({\n            \"name\": name,\n            \"column\": i\n          })\n        }\n      })\n\n      return (\n        <div>\n          <label htmlFor=\"part-name\">\n            name partition: \n            <input type=\"text\" id=\"part-name\" name=\"part-name\" style={{width: 70}} />\n          </label>\n          <label htmlFor=\"start\">\n            begin:\n            <input id=\"start\" type=\"number\" name=\"start\" style={{width: 50}}/>\n          </label>\n          <label htmlFor=\"end\">\n            end:\n            <input id=\"end\" type=\"number\" name=\"end\" style={{width: 50}}/>\n          </label>\n          <button onClick={handleEditNamePart}>Edit partition</button>\n          <TablePartitionComponent data={part_list_element} handleEditNamePart={handleEditNamePart}/>\n        </div>\n      )\n    }\n  }\n\n  const handleEditNamePart = (e) => {\n    let name = document.querySelector(\"input#part-name\");\n    let start = document.querySelector(\"input#start\");\n    let end = document.querySelector(\"input#end\");\n    if (name.value === \"\" || start.value === \"\" || end.value === \"\") {\n      alert(\"Không được để trống phần nhập\");\n    } else if (name.value.indexOf(\" \") >= 0) {\n      alert(\"Tên không được có dấu cách\");\n    } else if (parseInt(start.value) > parseInt(end.value)) {\n      alert(\"Vị trí bắt đầu phải nhỏ hơn vị trí kết thúc\");\n    } else {\n      let partsData = parts.slice();\n      let newPartsData = [];\n      let isNextPart = false;\n      let isChanged = true;\n      // console.log(partsData);\n      for (let i = 0; i < partsData.length; i++) {\n        // console.log(newPartsData);\n        let p_name = partsData[i]['name'];\n        let p_begin = partsData[i]['begin'];\n        let p_end = partsData[i]['end'];\n        // console.log(partsData[i]);\n        // console.log(p_name, p_begin, p_end);\n        if (p_name === name.value) {\n          alert(\"Tên partition đã được dùng rồi\");\n          isChanged = false;\n          break;\n        } else {\n          if (parseInt(start.value) > p_end || parseInt(end.value) < p_begin) {\n            // add part1\n            newPartsData.push({\n              \"name\": p_name,\n              \"begin\": p_begin,\n              \"end\": p_end\n            });\n            continue;\n          }\n          if (parseInt(start.value) === p_begin) {\n            if (parseInt(end.value) < p_end) {\n              // add new part\n              newPartsData.push({\n                \"name\": name.value,\n                \"begin\": p_begin,\n                \"end\": parseInt(end.value)\n              });\n              // add part 1\n              newPartsData.push({\n                \"name\": p_name,\n                \"begin\": parseInt(end.value) + 1,\n                \"end\": p_end\n              });\n            } else {\n              // add new part\n              newPartsData.push({\n                \"name\": name.value,\n                \"begin\": p_begin,\n                \"end\": parseInt(end.value)\n              });\n            }\n          } else if (parseInt(start.value) > p_begin) {\n            // add part1\n            newPartsData.push({\n              \"name\": p_name,\n              \"begin\": p_begin,\n              \"end\": parseInt(start.value) - 1\n            });\n            if (parseInt(end.value) > p_end) {\n              isNextPart = true;\n              // add new part\n              newPartsData.push({\n                \"name\": name.value,\n                \"begin\": parseInt(start.value),\n                \"end\": parseInt(end.value)\n              });\n            } else {\n              // add new part\n              newPartsData.push({\n                \"name\": name.value,\n                \"begin\": parseInt(start.value),\n                \"end\": p_end\n              });\n            }\n          } else if (isNextPart) {\n            if (parseInt(end.value) > end) {\n              isNextPart = true;\n              continue;\n            } else {\n              newPartsData.push({\n                \"name\": p_name,\n                \"begin\": parseInt(end.value) + 1,\n                \"end\": p_end\n              });\n              isNextPart = false;\n            }\n          }\n        }\n      }\n      if (isChanged) {\n        setParts(newPartsData);\n      }\n      // console.log(newPartsData);\n      // console.log([name.value, start.value, end.value]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ImportFileComponent getData={setData} />\n      { showData() }\n      { showPartitionData() }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}